import tensorflow as tf
from tensorflow.keras import layers,Model

class Model_VGGNet(Model):
    def __init__(self, output_dim=10):
        super(Model_VGGNet, self).__init__(name='Model_VGGNet')
        self.output_dim = output_dim
        # self.layer1 = layers.Conv2D(filters=64,kernel_size=3, strides=4, padding='same',activation='relu',input_shape=(227,227,3))
        self.layer1 = layers.Conv2D(filters=64,kernel_size=3, strides=1, padding='same',activation='relu',input_shape=(28,28,1))
        self.layer2 = layers.Conv2D(filters=64,kernel_size=3, strides=1, padding='same',activation='relu')
        self.layer3 = layers.MaxPool2D(pool_size=2,strides=2)
        self.layer4 = layers.Dropout(0.2)
        self.layer5 = layers.Conv2D(filters=128,kernel_size=3, strides=1, padding='same',activation='relu')
        self.layer6 = layers.Conv2D(filters=128,kernel_size=3, strides=1, padding='same',activation='relu')
        self.layer7 = layers.MaxPool2D(pool_size=2,strides=2)
        self.layer8 = layers.Dropout(0.2)
        self.layer9 = layers.Conv2D(filters=256,kernel_size=3, strides=1, padding='same',activation='relu')
        self.layer10 = layers.Conv2D(filters=256,kernel_size=3, strides=1, padding='same',activation='relu')
        self.layer11 = layers.Conv2D(filters=256,kernel_size=3, strides=1, padding='same',activation='relu')
        self.layer12 = layers.MaxPool2D(pool_size=2,strides=2)
        self.layer13 = layers.Dropout(0.2)
        self.layer14 = layers.Conv2D(filters=512,kernel_size=3, strides=1, padding='same',activation='relu')
        self.layer15 = layers.Conv2D(filters=512,kernel_size=3, strides=1, padding='same',activation='relu')
        self.layer16 = layers.Conv2D(filters=512,kernel_size=3, strides=1, padding='same',activation='relu')
        self.layer17 = layers.MaxPool2D(pool_size=2,strides=2)
        self.layer18 = layers.Dropout(0.2)
        self.layer19 = layers.Conv2D(filters=512,kernel_size=3, strides=1, padding='same',activation='relu')
        self.layer20 = layers.Conv2D(filters=512,kernel_size=3, strides=1, padding='same',activation='relu')
        self.layer21 = layers.Conv2D(filters=512,kernel_size=3, strides=1, padding='same',activation='relu')
        # self.layer22 = layers.MaxPool2D(pool_size=2,strides=2)
        self.layer22 = layers.MaxPool2D(pool_size=1,strides=1)
        self.layer23 = layers.Dropout(0.2)
        self.layer24 = layers.Flatten()
        self.layer25 = layers.Dense(4096, activation='relu')
        self.layer26 = layers.Dropout(0.2)
        self.layer27 = layers.Dense(4096, activation='relu')
        self.layer28 = layers.Dropout(0.2)
        self.layer29 = layers.Dense(1000, activation='relu')
        self.layer30 = layers.Dropout(0.2)
        self.layer31 = layers.Dense(self.output_dim, activation='softmax')

    def call(self, inputs):
        x = self.layer1(inputs)
        x = self.layer2(x)
        x = self.layer3(x)
        x = self.layer4(x)
        x = self.layer5(x)
        x = self.layer6(x)
        x = self.layer7(x)
        x = self.layer8(x)
        x = self.layer9(x)
        x = self.layer10(x)
        x = self.layer11(x)
        x = self.layer12(x)
        x = self.layer13(x)
        x = self.layer14(x)
        x = self.layer15(x)
        x = self.layer16(x)
        x = self.layer17(x)
        x = self.layer18(x)
        x = self.layer19(x)
        x = self.layer20(x)
        x = self.layer21(x)
        x = self.layer22(x)
        x = self.layer23(x)
        x = self.layer24(x)
        x = self.layer25(x)
        x = self.layer26(x)
        x = self.layer27(x)
        x = self.layer28(x)
        x = self.layer29(x)
        x = self.layer30(x)
        out = self.layer31(x)
        return out